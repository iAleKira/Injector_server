<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.assertj.core.util.Arrays"/>
    <fullyQualifiedTypeName name="junit.framework.Assert"/>
    <fullyQualifiedTypeName name="org.junit.rules.ExpectedException"/>
    <fullyQualifiedTypeName name="org.junit.Rule"/>
    <fullyQualifiedTypeName name="java.lang.NullPointerException"/>
    <fullyQualifiedTypeName name="server.Communication"/>
    <fullyQualifiedTypeName name="server.SetupMap"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.hamcrest.core.IsInstanceOf"/>
    <fullyQualifiedTypeName name="filter.PatternFinder"/>
    <fullyQualifiedTypeName name="java.nio.channels.Selector"/>
    <fullyQualifiedTypeName name="java.nio.channels.ServerSocketChannel"/>
    <fullyQualifiedTypeName name="java.net.InetSocketAddress"/>
    <fullyQualifiedTypeName name="java.nio.channels.SelectionKey"/>
    <fullyQualifiedTypeName name="javax.swing.text.html.HTMLDocument.Iterator"/>
    <fullyQualifiedTypeName name="java.util.Iterator"/>
    <fullyQualifiedTypeName name="java.nio.channels.SocketChannel"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.nio.ByteBuffer"/>
    <fullyQualifiedTypeName name="org.assertj.core.internal.bytebuddy.asm.Advice.Exit"/>
    <fullyQualifiedTypeName name="java.nio.file.Files"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.nio.file.Paths"/>
    <fullyQualifiedTypeName name="java.io.FileReader"/>
    <fullyQualifiedTypeName name="server.MapFiller"/>
    <fullyQualifiedTypeName name="server.PayloadGenerator"/>
    <fullyQualifiedTypeName name="parser.MatcherParser"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="parser.RegexParser"/>
    <fullyQualifiedTypeName name="java.io.BufferedReader"/>
    <fullyQualifiedTypeName name="parser.LookForMatch"/>
    <fullyQualifiedTypeName name="java.util.regex.Pattern"/>
    <fullyQualifiedTypeName name="java.util.regex.Matcher"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="parser.Parser"/>
    <fullyQualifiedTypeName name="filter.MockFilter"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="injector.Injector"/>
    <fullyQualifiedTypeName name="com.github.curiousoddman.rgxgen.RgxGen"/>
    <fullyQualifiedTypeName name="com.github.curiousoddman.rgxgen.config.RgxGenProperties"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="server.ResponseGenerator"/>
    <fullyQualifiedTypeName name="server.Database"/>
    <fullyQualifiedTypeName name="org.junit.Before"/>
    <fullyQualifiedTypeName name="injector.ExploitBuilder"/>
    <fullyQualifiedTypeName name="java.io.FileNotFoundException"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="java.util.TreeMap"/>
    <fullyQualifiedTypeName name="org.assertj.core.matcher.AssertionMatcher"/>
    <fullyQualifiedTypeName name="org.cornutum.regexpgen.RandomGen"/>
    <fullyQualifiedTypeName name="org.cornutum.regexpgen.random.RandomBoundsGen"/>
    <fullyQualifiedTypeName name="org.cornutum.regexpgen.RegExpGen"/>
    <fullyQualifiedTypeName name="org.cornutum.regexpgen.js.Provider"/>
    <fullyQualifiedTypeName name="ExploitBuilder"/>
</qualifiedTypeNameHistroy>
