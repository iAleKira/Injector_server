package server;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.RandomAccessFile;
import java.net.Socket;
import java.util.Map;

// ClientHandler class
public class ClientHandler implements Runnable {
	private final Socket clientSocket;
	private int portNum;
	private String service;
	private PayloadGenerator generator;

	// Constructor
	public ClientHandler(Socket socket, int portNum, String service, PayloadGenerator generator) {
		this.clientSocket = socket;
		this.generator = generator;
		this.portNum = portNum;
		this.service = service;
	}

	

	public void run() {

		PrintWriter out = null;
		BufferedReader in = null;
		try {

			// get the outputstream of client
			out = new PrintWriter(clientSocket.getOutputStream(), true);

			// get the inputstream of client
			in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
			System.out.println("Service:" + service);
			System.out.println("Port num:" + portNum);
			String line;
			while (in.readLine() != null) {

				// writing the received message from
				// client
				out.println(generator.getRandomPayloadFromFile(
						new RandomAccessFile(new File("TextFiles//PortsStrings//serviceStrings//" + "filteredFiles//"
								+ service + ".txt"), "r")));
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if (out != null) {
					out.close();
				}
				if (in != null) {
					in.close();
					clientSocket.close();
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
}